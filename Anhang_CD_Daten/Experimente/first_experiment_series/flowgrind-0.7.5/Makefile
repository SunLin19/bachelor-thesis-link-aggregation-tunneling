# Makefile.in generated by automake 1.14.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright (C) 2014 Alexander Zimmermann <alexander.zimmermann@netapp.com>
#
# This file is part of Flowgrind.
#
# Flowgrind is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Flowgrind is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Flowgrind.  If not, see <http://www.gnu.org/licenses/>.
#



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/flowgrind
pkgincludedir = $(includedir)/flowgrind
pkglibdir = $(libdir)/flowgrind
pkglibexecdir = $(libexecdir)/flowgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = flowgrind$(EXEEXT) flowgrind-stop$(EXEEXT)
sbin_PROGRAMS = flowgrindd$(EXEEXT)

# configured w/ pcap
#am__append_1 = src/fg_pcap.h src/fg_pcap.c
#am__append_2 = $(PCAP_LDADD)
#am__append_3 = $(PCAP_CFLAGS)
##am__append_4 = src/fg_barrier.h src/fg_barrier.c
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(top_srcdir)/src/config.h.in $(top_srcdir)/build-aux/depcomp \
	$(dist_man1_MANS) $(noinst_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(man1dir)"
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_flowgrind_OBJECTS = src/flowgrind-debug.$(OBJEXT) \
	src/flowgrind-fg_error.$(OBJEXT) \
	src/flowgrind-fg_progname.$(OBJEXT) \
	src/flowgrind-fg_string.$(OBJEXT) \
	src/flowgrind-fg_time.$(OBJEXT) \
	src/flowgrind-flowgrind.$(OBJEXT) \
	src/flowgrind-fg_argparser.$(OBJEXT)
flowgrind_OBJECTS = $(am_flowgrind_OBJECTS)
am__DEPENDENCIES_1 =
flowgrind_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
flowgrind_LINK = $(CCLD) $(flowgrind_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_flowgrind_stop_OBJECTS = src/flowgrind_stop-fg_error.$(OBJEXT) \
	src/flowgrind_stop-fg_progname.$(OBJEXT) \
	src/flowgrind_stop-flowgrind_stop.$(OBJEXT) \
	src/flowgrind_stop-fg_argparser.$(OBJEXT)
flowgrind_stop_OBJECTS = $(am_flowgrind_stop_OBJECTS)
flowgrind_stop_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
flowgrind_stop_LINK = $(CCLD) $(flowgrind_stop_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#am__objects_1 = src/flowgrindd-fg_pcap.$(OBJEXT)
##am__objects_2 = src/flowgrindd-fg_barrier.$(OBJEXT)
am_flowgrindd_OBJECTS = src/flowgrindd-daemon.$(OBJEXT) \
	src/flowgrindd-debug.$(OBJEXT) \
	src/flowgrindd-destination.$(OBJEXT) \
	src/flowgrindd-fg_error.$(OBJEXT) \
	src/flowgrindd-fg_math.$(OBJEXT) \
	src/flowgrindd-fg_progname.$(OBJEXT) \
	src/flowgrindd-fg_socket.$(OBJEXT) \
	src/flowgrindd-fg_string.$(OBJEXT) \
	src/flowgrindd-fg_time.$(OBJEXT) \
	src/flowgrindd-flowgrindd.$(OBJEXT) \
	src/flowgrindd-log.$(OBJEXT) src/flowgrindd-source.$(OBJEXT) \
	src/flowgrindd-trafgen.$(OBJEXT) \
	src/flowgrindd-fg_argparser.$(OBJEXT) \
	src/flowgrindd-fg_list.$(OBJEXT) \
	src/flowgrindd-fg_affinity.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
flowgrindd_OBJECTS = $(am_flowgrindd_OBJECTS)
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
flowgrindd_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
flowgrindd_LINK = $(CCLD) $(flowgrindd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(flowgrind_SOURCES) $(flowgrind_stop_SOURCES) \
	$(flowgrindd_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man1_MANS)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
ACLOCAL = ${SHELL} /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5/build-aux/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5/build-aux/missing automake-1.14
AWK = gawk
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = cc -E
CPPFLAGS = 
CURL_CFLAGS = 
CURL_CONFIG = /usr/bin/curl-config
CURL_LDADD = -L/usr/lib/x86_64-linux-gnu -lcurl
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
GSL_CFLAGS = 
GSL_CONFIG = 
GSL_LDADD = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread -lm 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5/build-aux/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = flowgrind
PACKAGE_BUGREPORT = https://github.com/flowgrind/flowgrind/issues
PACKAGE_NAME = Flowgrind
PACKAGE_STRING = Flowgrind 0.7.5
PACKAGE_TARNAME = flowgrind
PACKAGE_URL = http://www.flowgrind.net
PACKAGE_VERSION = 0.7.5
PATH_SEPARATOR = :
PCAP_CFLAGS = 
PCAP_CONFIG = 
PCAP_LDADD = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.7.5
XMLRPC_C_CLIENT_CFLAGS = -I/usr/include 
XMLRPC_C_CLIENT_LDADD = -L/usr/lib/x86_64-linux-gnu  -lxmlrpc_client -lxmlrpc  -lxmlrpc_xmlparse -lxmlrpc_xmltok -lxmlrpc_util -L/usr/lib/x86_64-linux-gnu -lcurl 
XMLRPC_C_CONFIG = /usr/bin/xmlrpc-c-config
XMLRPC_C_SERVER_CFLAGS = -I/usr/include 
XMLRPC_C_SERVER_LDADD = -L/usr/lib/x86_64-linux-gnu  -lxmlrpc_server_abyss -lxmlrpc_server -lxmlrpc_abyss  -lpthread -lxmlrpc  -lxmlrpc_xmlparse -lxmlrpc_xmltok -lxmlrpc_util 
abs_builddir = /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5
abs_srcdir = /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5
abs_top_builddir = /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5
abs_top_srcdir = /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5
ac_ct_CC = cc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/richi/Dropbox/UNI/Info_WS_2014-2015/Bachelorarbeit/Experimente/flowgrind-0.7.5/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
CLEANFILES = gitversion.h doc/doxyfile.stamp
CLEAN_LOCAL_FILES = doc/html doc/latex doc/html.timestamp
MR_PROPER_FILES = Makefile.in aclocal.m4 build-aux config.h.in config.h.in~ \
				  configure

BUILT_SOURCES = gitversion.h
noinst_HEADERS = src/common.h src/debug.h
dist_man1_MANS = man/flowgrind.1 \
				 man/flowgrindd.1 \
				 man/flowgrind-stop.1

AM_CFLAGS = -Wall -Wextra -Werror=implicit -std=gnu99 -fgnu89-inline

# flowgrind controller
flowgrind_SOURCES = src/common.h src/debug.c src/fg_error.h src/fg_error.c \
					src/fg_progname.h src/fg_progname.c src/fg_socket.h \
					src/fg_string.h src/fg_string.c \
					fg_definitions.h src/fg_time.h src/fg_time.c \
					src/flowgrind.h src/flowgrind.c src/fg_argparser.h \
					src/fg_argparser.c

flowgrind_LDADD = $(LIBS) $(CURL_LDADD) $(XMLRPC_C_CLIENT_LDADD) $(GSL_LDADD)
flowgrind_CFLAGS = $(AM_CFLAGS) $(CURL_CFLAGS) $(XMLRPC_C_CLIENT_CFLAGS) $(GSL_CFLAGS)

# flowgrind daemon
flowgrindd_SOURCES = src/common.h src/daemon.h src/daemon.c \
	src/debug.c src/destination.h src/destination.c src/fg_error.h \
	src/fg_error.c src/fg_math.h src/fg_math.c src/fg_progname.h \
	src/fg_progname.c src/fg_socket.c src/fg_socket.h \
	src/fg_string.h src/fg_string.c src/fg_time.c src/flowgrindd.c \
	src/log.h src/log.c src/source.h src/source.c src/trafgen.h \
	src/trafgen.c src/fg_argparser.h src/fg_argparser.c \
	src/fg_list.h src/fg_list.c src/fg_definitions.h \
	src/fg_affinity.h src/fg_affinity.c $(am__append_1) \
	$(am__append_4)
flowgrindd_LDADD = $(LIBS) $(XMLRPC_C_SERVER_LDADD) $(GSL_LDADD) \
	$(am__append_2)
flowgrindd_CFLAGS = $(AM_CFLAGS) $(XMLRPC_C_SERVER_CFLAGS) \
	$(GSL_CFLAGS) $(am__append_3)

# flowgrind-stop
flowgrind_stop_SOURCES = src/fg_error.h src/fg_error.c src/fg_progname.h \
						 src/fg_progname.c src/flowgrind_stop.c \
						 src/fg_argparser.h src/fg_argparser.c \
						 src/fg_definitions.h

flowgrind_stop_LDADD = $(LIBS) $(CURL_LDADD) $(XMLRPC_C_CLIENT_LDADD)
flowgrind_stop_CFLAGS = $(AM_CFLAGS) $(CURL_FLAGS) $(XMLRPC_C_CLIENT_CFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

src/config.h: src/stamp-h1
	@test -f $@ || rm -f src/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/stamp-h1

src/stamp-h1: $(top_srcdir)/src/config.h.in $(top_builddir)/config.status
	@rm -f src/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(top_srcdir)/src/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f src/stamp-h1
	touch $@

distclean-hdr:
	-rm -f src/config.h src/stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-debug.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-fg_error.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-fg_progname.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-fg_string.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-fg_time.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-flowgrind.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind-fg_argparser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

flowgrind$(EXEEXT): $(flowgrind_OBJECTS) $(flowgrind_DEPENDENCIES) $(EXTRA_flowgrind_DEPENDENCIES) 
	@rm -f flowgrind$(EXEEXT)
	$(AM_V_CCLD)$(flowgrind_LINK) $(flowgrind_OBJECTS) $(flowgrind_LDADD) $(LIBS)
src/flowgrind_stop-fg_error.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind_stop-fg_progname.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind_stop-flowgrind_stop.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrind_stop-fg_argparser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

flowgrind-stop$(EXEEXT): $(flowgrind_stop_OBJECTS) $(flowgrind_stop_DEPENDENCIES) $(EXTRA_flowgrind_stop_DEPENDENCIES) 
	@rm -f flowgrind-stop$(EXEEXT)
	$(AM_V_CCLD)$(flowgrind_stop_LINK) $(flowgrind_stop_OBJECTS) $(flowgrind_stop_LDADD) $(LIBS)
src/flowgrindd-daemon.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-debug.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-destination.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_error.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_math.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_progname.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_socket.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_string.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_time.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-flowgrindd.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-log.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-source.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-trafgen.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_argparser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_list.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_affinity.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_pcap.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/flowgrindd-fg_barrier.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

flowgrindd$(EXEEXT): $(flowgrindd_OBJECTS) $(flowgrindd_DEPENDENCIES) $(EXTRA_flowgrindd_DEPENDENCIES) 
	@rm -f flowgrindd$(EXEEXT)
	$(AM_V_CCLD)$(flowgrindd_LINK) $(flowgrindd_OBJECTS) $(flowgrindd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include src/$(DEPDIR)/flowgrind-debug.Po
include src/$(DEPDIR)/flowgrind-fg_argparser.Po
include src/$(DEPDIR)/flowgrind-fg_error.Po
include src/$(DEPDIR)/flowgrind-fg_progname.Po
include src/$(DEPDIR)/flowgrind-fg_string.Po
include src/$(DEPDIR)/flowgrind-fg_time.Po
include src/$(DEPDIR)/flowgrind-flowgrind.Po
include src/$(DEPDIR)/flowgrind_stop-fg_argparser.Po
include src/$(DEPDIR)/flowgrind_stop-fg_error.Po
include src/$(DEPDIR)/flowgrind_stop-fg_progname.Po
include src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Po
include src/$(DEPDIR)/flowgrindd-daemon.Po
include src/$(DEPDIR)/flowgrindd-debug.Po
include src/$(DEPDIR)/flowgrindd-destination.Po
include src/$(DEPDIR)/flowgrindd-fg_affinity.Po
include src/$(DEPDIR)/flowgrindd-fg_argparser.Po
include src/$(DEPDIR)/flowgrindd-fg_barrier.Po
include src/$(DEPDIR)/flowgrindd-fg_error.Po
include src/$(DEPDIR)/flowgrindd-fg_list.Po
include src/$(DEPDIR)/flowgrindd-fg_math.Po
include src/$(DEPDIR)/flowgrindd-fg_pcap.Po
include src/$(DEPDIR)/flowgrindd-fg_progname.Po
include src/$(DEPDIR)/flowgrindd-fg_socket.Po
include src/$(DEPDIR)/flowgrindd-fg_string.Po
include src/$(DEPDIR)/flowgrindd-fg_time.Po
include src/$(DEPDIR)/flowgrindd-flowgrindd.Po
include src/$(DEPDIR)/flowgrindd-log.Po
include src/$(DEPDIR)/flowgrindd-source.Po
include src/$(DEPDIR)/flowgrindd-trafgen.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/flowgrind-debug.o: src/debug.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-debug.o -MD -MP -MF src/$(DEPDIR)/flowgrind-debug.Tpo -c -o src/flowgrind-debug.o `test -f 'src/debug.c' || echo '$(srcdir)/'`src/debug.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-debug.Tpo src/$(DEPDIR)/flowgrind-debug.Po
#	$(AM_V_CC)source='src/debug.c' object='src/flowgrind-debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-debug.o `test -f 'src/debug.c' || echo '$(srcdir)/'`src/debug.c

src/flowgrind-debug.obj: src/debug.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-debug.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-debug.Tpo -c -o src/flowgrind-debug.obj `if test -f 'src/debug.c'; then $(CYGPATH_W) 'src/debug.c'; else $(CYGPATH_W) '$(srcdir)/src/debug.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-debug.Tpo src/$(DEPDIR)/flowgrind-debug.Po
#	$(AM_V_CC)source='src/debug.c' object='src/flowgrind-debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-debug.obj `if test -f 'src/debug.c'; then $(CYGPATH_W) 'src/debug.c'; else $(CYGPATH_W) '$(srcdir)/src/debug.c'; fi`

src/flowgrind-fg_error.o: src/fg_error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_error.o -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_error.Tpo -c -o src/flowgrind-fg_error.o `test -f 'src/fg_error.c' || echo '$(srcdir)/'`src/fg_error.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_error.Tpo src/$(DEPDIR)/flowgrind-fg_error.Po
#	$(AM_V_CC)source='src/fg_error.c' object='src/flowgrind-fg_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_error.o `test -f 'src/fg_error.c' || echo '$(srcdir)/'`src/fg_error.c

src/flowgrind-fg_error.obj: src/fg_error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_error.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_error.Tpo -c -o src/flowgrind-fg_error.obj `if test -f 'src/fg_error.c'; then $(CYGPATH_W) 'src/fg_error.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_error.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_error.Tpo src/$(DEPDIR)/flowgrind-fg_error.Po
#	$(AM_V_CC)source='src/fg_error.c' object='src/flowgrind-fg_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_error.obj `if test -f 'src/fg_error.c'; then $(CYGPATH_W) 'src/fg_error.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_error.c'; fi`

src/flowgrind-fg_progname.o: src/fg_progname.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_progname.o -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_progname.Tpo -c -o src/flowgrind-fg_progname.o `test -f 'src/fg_progname.c' || echo '$(srcdir)/'`src/fg_progname.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_progname.Tpo src/$(DEPDIR)/flowgrind-fg_progname.Po
#	$(AM_V_CC)source='src/fg_progname.c' object='src/flowgrind-fg_progname.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_progname.o `test -f 'src/fg_progname.c' || echo '$(srcdir)/'`src/fg_progname.c

src/flowgrind-fg_progname.obj: src/fg_progname.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_progname.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_progname.Tpo -c -o src/flowgrind-fg_progname.obj `if test -f 'src/fg_progname.c'; then $(CYGPATH_W) 'src/fg_progname.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_progname.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_progname.Tpo src/$(DEPDIR)/flowgrind-fg_progname.Po
#	$(AM_V_CC)source='src/fg_progname.c' object='src/flowgrind-fg_progname.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_progname.obj `if test -f 'src/fg_progname.c'; then $(CYGPATH_W) 'src/fg_progname.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_progname.c'; fi`

src/flowgrind-fg_string.o: src/fg_string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_string.o -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_string.Tpo -c -o src/flowgrind-fg_string.o `test -f 'src/fg_string.c' || echo '$(srcdir)/'`src/fg_string.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_string.Tpo src/$(DEPDIR)/flowgrind-fg_string.Po
#	$(AM_V_CC)source='src/fg_string.c' object='src/flowgrind-fg_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_string.o `test -f 'src/fg_string.c' || echo '$(srcdir)/'`src/fg_string.c

src/flowgrind-fg_string.obj: src/fg_string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_string.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_string.Tpo -c -o src/flowgrind-fg_string.obj `if test -f 'src/fg_string.c'; then $(CYGPATH_W) 'src/fg_string.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_string.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_string.Tpo src/$(DEPDIR)/flowgrind-fg_string.Po
#	$(AM_V_CC)source='src/fg_string.c' object='src/flowgrind-fg_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_string.obj `if test -f 'src/fg_string.c'; then $(CYGPATH_W) 'src/fg_string.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_string.c'; fi`

src/flowgrind-fg_time.o: src/fg_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_time.o -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_time.Tpo -c -o src/flowgrind-fg_time.o `test -f 'src/fg_time.c' || echo '$(srcdir)/'`src/fg_time.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_time.Tpo src/$(DEPDIR)/flowgrind-fg_time.Po
#	$(AM_V_CC)source='src/fg_time.c' object='src/flowgrind-fg_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_time.o `test -f 'src/fg_time.c' || echo '$(srcdir)/'`src/fg_time.c

src/flowgrind-fg_time.obj: src/fg_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_time.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_time.Tpo -c -o src/flowgrind-fg_time.obj `if test -f 'src/fg_time.c'; then $(CYGPATH_W) 'src/fg_time.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_time.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_time.Tpo src/$(DEPDIR)/flowgrind-fg_time.Po
#	$(AM_V_CC)source='src/fg_time.c' object='src/flowgrind-fg_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_time.obj `if test -f 'src/fg_time.c'; then $(CYGPATH_W) 'src/fg_time.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_time.c'; fi`

src/flowgrind-flowgrind.o: src/flowgrind.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-flowgrind.o -MD -MP -MF src/$(DEPDIR)/flowgrind-flowgrind.Tpo -c -o src/flowgrind-flowgrind.o `test -f 'src/flowgrind.c' || echo '$(srcdir)/'`src/flowgrind.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-flowgrind.Tpo src/$(DEPDIR)/flowgrind-flowgrind.Po
#	$(AM_V_CC)source='src/flowgrind.c' object='src/flowgrind-flowgrind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-flowgrind.o `test -f 'src/flowgrind.c' || echo '$(srcdir)/'`src/flowgrind.c

src/flowgrind-flowgrind.obj: src/flowgrind.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-flowgrind.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-flowgrind.Tpo -c -o src/flowgrind-flowgrind.obj `if test -f 'src/flowgrind.c'; then $(CYGPATH_W) 'src/flowgrind.c'; else $(CYGPATH_W) '$(srcdir)/src/flowgrind.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-flowgrind.Tpo src/$(DEPDIR)/flowgrind-flowgrind.Po
#	$(AM_V_CC)source='src/flowgrind.c' object='src/flowgrind-flowgrind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-flowgrind.obj `if test -f 'src/flowgrind.c'; then $(CYGPATH_W) 'src/flowgrind.c'; else $(CYGPATH_W) '$(srcdir)/src/flowgrind.c'; fi`

src/flowgrind-fg_argparser.o: src/fg_argparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_argparser.o -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_argparser.Tpo -c -o src/flowgrind-fg_argparser.o `test -f 'src/fg_argparser.c' || echo '$(srcdir)/'`src/fg_argparser.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_argparser.Tpo src/$(DEPDIR)/flowgrind-fg_argparser.Po
#	$(AM_V_CC)source='src/fg_argparser.c' object='src/flowgrind-fg_argparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_argparser.o `test -f 'src/fg_argparser.c' || echo '$(srcdir)/'`src/fg_argparser.c

src/flowgrind-fg_argparser.obj: src/fg_argparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -MT src/flowgrind-fg_argparser.obj -MD -MP -MF src/$(DEPDIR)/flowgrind-fg_argparser.Tpo -c -o src/flowgrind-fg_argparser.obj `if test -f 'src/fg_argparser.c'; then $(CYGPATH_W) 'src/fg_argparser.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_argparser.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind-fg_argparser.Tpo src/$(DEPDIR)/flowgrind-fg_argparser.Po
#	$(AM_V_CC)source='src/fg_argparser.c' object='src/flowgrind-fg_argparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_CFLAGS) $(CFLAGS) -c -o src/flowgrind-fg_argparser.obj `if test -f 'src/fg_argparser.c'; then $(CYGPATH_W) 'src/fg_argparser.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_argparser.c'; fi`

src/flowgrind_stop-fg_error.o: src/fg_error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-fg_error.o -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-fg_error.Tpo -c -o src/flowgrind_stop-fg_error.o `test -f 'src/fg_error.c' || echo '$(srcdir)/'`src/fg_error.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-fg_error.Tpo src/$(DEPDIR)/flowgrind_stop-fg_error.Po
#	$(AM_V_CC)source='src/fg_error.c' object='src/flowgrind_stop-fg_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-fg_error.o `test -f 'src/fg_error.c' || echo '$(srcdir)/'`src/fg_error.c

src/flowgrind_stop-fg_error.obj: src/fg_error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-fg_error.obj -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-fg_error.Tpo -c -o src/flowgrind_stop-fg_error.obj `if test -f 'src/fg_error.c'; then $(CYGPATH_W) 'src/fg_error.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_error.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-fg_error.Tpo src/$(DEPDIR)/flowgrind_stop-fg_error.Po
#	$(AM_V_CC)source='src/fg_error.c' object='src/flowgrind_stop-fg_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-fg_error.obj `if test -f 'src/fg_error.c'; then $(CYGPATH_W) 'src/fg_error.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_error.c'; fi`

src/flowgrind_stop-fg_progname.o: src/fg_progname.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-fg_progname.o -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-fg_progname.Tpo -c -o src/flowgrind_stop-fg_progname.o `test -f 'src/fg_progname.c' || echo '$(srcdir)/'`src/fg_progname.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-fg_progname.Tpo src/$(DEPDIR)/flowgrind_stop-fg_progname.Po
#	$(AM_V_CC)source='src/fg_progname.c' object='src/flowgrind_stop-fg_progname.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-fg_progname.o `test -f 'src/fg_progname.c' || echo '$(srcdir)/'`src/fg_progname.c

src/flowgrind_stop-fg_progname.obj: src/fg_progname.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-fg_progname.obj -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-fg_progname.Tpo -c -o src/flowgrind_stop-fg_progname.obj `if test -f 'src/fg_progname.c'; then $(CYGPATH_W) 'src/fg_progname.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_progname.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-fg_progname.Tpo src/$(DEPDIR)/flowgrind_stop-fg_progname.Po
#	$(AM_V_CC)source='src/fg_progname.c' object='src/flowgrind_stop-fg_progname.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-fg_progname.obj `if test -f 'src/fg_progname.c'; then $(CYGPATH_W) 'src/fg_progname.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_progname.c'; fi`

src/flowgrind_stop-flowgrind_stop.o: src/flowgrind_stop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-flowgrind_stop.o -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Tpo -c -o src/flowgrind_stop-flowgrind_stop.o `test -f 'src/flowgrind_stop.c' || echo '$(srcdir)/'`src/flowgrind_stop.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Tpo src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Po
#	$(AM_V_CC)source='src/flowgrind_stop.c' object='src/flowgrind_stop-flowgrind_stop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-flowgrind_stop.o `test -f 'src/flowgrind_stop.c' || echo '$(srcdir)/'`src/flowgrind_stop.c

src/flowgrind_stop-flowgrind_stop.obj: src/flowgrind_stop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-flowgrind_stop.obj -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Tpo -c -o src/flowgrind_stop-flowgrind_stop.obj `if test -f 'src/flowgrind_stop.c'; then $(CYGPATH_W) 'src/flowgrind_stop.c'; else $(CYGPATH_W) '$(srcdir)/src/flowgrind_stop.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Tpo src/$(DEPDIR)/flowgrind_stop-flowgrind_stop.Po
#	$(AM_V_CC)source='src/flowgrind_stop.c' object='src/flowgrind_stop-flowgrind_stop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-flowgrind_stop.obj `if test -f 'src/flowgrind_stop.c'; then $(CYGPATH_W) 'src/flowgrind_stop.c'; else $(CYGPATH_W) '$(srcdir)/src/flowgrind_stop.c'; fi`

src/flowgrind_stop-fg_argparser.o: src/fg_argparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-fg_argparser.o -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-fg_argparser.Tpo -c -o src/flowgrind_stop-fg_argparser.o `test -f 'src/fg_argparser.c' || echo '$(srcdir)/'`src/fg_argparser.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-fg_argparser.Tpo src/$(DEPDIR)/flowgrind_stop-fg_argparser.Po
#	$(AM_V_CC)source='src/fg_argparser.c' object='src/flowgrind_stop-fg_argparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-fg_argparser.o `test -f 'src/fg_argparser.c' || echo '$(srcdir)/'`src/fg_argparser.c

src/flowgrind_stop-fg_argparser.obj: src/fg_argparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -MT src/flowgrind_stop-fg_argparser.obj -MD -MP -MF src/$(DEPDIR)/flowgrind_stop-fg_argparser.Tpo -c -o src/flowgrind_stop-fg_argparser.obj `if test -f 'src/fg_argparser.c'; then $(CYGPATH_W) 'src/fg_argparser.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_argparser.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrind_stop-fg_argparser.Tpo src/$(DEPDIR)/flowgrind_stop-fg_argparser.Po
#	$(AM_V_CC)source='src/fg_argparser.c' object='src/flowgrind_stop-fg_argparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrind_stop_CFLAGS) $(CFLAGS) -c -o src/flowgrind_stop-fg_argparser.obj `if test -f 'src/fg_argparser.c'; then $(CYGPATH_W) 'src/fg_argparser.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_argparser.c'; fi`

src/flowgrindd-daemon.o: src/daemon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-daemon.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-daemon.Tpo -c -o src/flowgrindd-daemon.o `test -f 'src/daemon.c' || echo '$(srcdir)/'`src/daemon.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-daemon.Tpo src/$(DEPDIR)/flowgrindd-daemon.Po
#	$(AM_V_CC)source='src/daemon.c' object='src/flowgrindd-daemon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-daemon.o `test -f 'src/daemon.c' || echo '$(srcdir)/'`src/daemon.c

src/flowgrindd-daemon.obj: src/daemon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-daemon.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-daemon.Tpo -c -o src/flowgrindd-daemon.obj `if test -f 'src/daemon.c'; then $(CYGPATH_W) 'src/daemon.c'; else $(CYGPATH_W) '$(srcdir)/src/daemon.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-daemon.Tpo src/$(DEPDIR)/flowgrindd-daemon.Po
#	$(AM_V_CC)source='src/daemon.c' object='src/flowgrindd-daemon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-daemon.obj `if test -f 'src/daemon.c'; then $(CYGPATH_W) 'src/daemon.c'; else $(CYGPATH_W) '$(srcdir)/src/daemon.c'; fi`

src/flowgrindd-debug.o: src/debug.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-debug.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-debug.Tpo -c -o src/flowgrindd-debug.o `test -f 'src/debug.c' || echo '$(srcdir)/'`src/debug.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-debug.Tpo src/$(DEPDIR)/flowgrindd-debug.Po
#	$(AM_V_CC)source='src/debug.c' object='src/flowgrindd-debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-debug.o `test -f 'src/debug.c' || echo '$(srcdir)/'`src/debug.c

src/flowgrindd-debug.obj: src/debug.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-debug.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-debug.Tpo -c -o src/flowgrindd-debug.obj `if test -f 'src/debug.c'; then $(CYGPATH_W) 'src/debug.c'; else $(CYGPATH_W) '$(srcdir)/src/debug.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-debug.Tpo src/$(DEPDIR)/flowgrindd-debug.Po
#	$(AM_V_CC)source='src/debug.c' object='src/flowgrindd-debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-debug.obj `if test -f 'src/debug.c'; then $(CYGPATH_W) 'src/debug.c'; else $(CYGPATH_W) '$(srcdir)/src/debug.c'; fi`

src/flowgrindd-destination.o: src/destination.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-destination.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-destination.Tpo -c -o src/flowgrindd-destination.o `test -f 'src/destination.c' || echo '$(srcdir)/'`src/destination.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-destination.Tpo src/$(DEPDIR)/flowgrindd-destination.Po
#	$(AM_V_CC)source='src/destination.c' object='src/flowgrindd-destination.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-destination.o `test -f 'src/destination.c' || echo '$(srcdir)/'`src/destination.c

src/flowgrindd-destination.obj: src/destination.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-destination.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-destination.Tpo -c -o src/flowgrindd-destination.obj `if test -f 'src/destination.c'; then $(CYGPATH_W) 'src/destination.c'; else $(CYGPATH_W) '$(srcdir)/src/destination.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-destination.Tpo src/$(DEPDIR)/flowgrindd-destination.Po
#	$(AM_V_CC)source='src/destination.c' object='src/flowgrindd-destination.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-destination.obj `if test -f 'src/destination.c'; then $(CYGPATH_W) 'src/destination.c'; else $(CYGPATH_W) '$(srcdir)/src/destination.c'; fi`

src/flowgrindd-fg_error.o: src/fg_error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_error.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_error.Tpo -c -o src/flowgrindd-fg_error.o `test -f 'src/fg_error.c' || echo '$(srcdir)/'`src/fg_error.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_error.Tpo src/$(DEPDIR)/flowgrindd-fg_error.Po
#	$(AM_V_CC)source='src/fg_error.c' object='src/flowgrindd-fg_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_error.o `test -f 'src/fg_error.c' || echo '$(srcdir)/'`src/fg_error.c

src/flowgrindd-fg_error.obj: src/fg_error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_error.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_error.Tpo -c -o src/flowgrindd-fg_error.obj `if test -f 'src/fg_error.c'; then $(CYGPATH_W) 'src/fg_error.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_error.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_error.Tpo src/$(DEPDIR)/flowgrindd-fg_error.Po
#	$(AM_V_CC)source='src/fg_error.c' object='src/flowgrindd-fg_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_error.obj `if test -f 'src/fg_error.c'; then $(CYGPATH_W) 'src/fg_error.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_error.c'; fi`

src/flowgrindd-fg_math.o: src/fg_math.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_math.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_math.Tpo -c -o src/flowgrindd-fg_math.o `test -f 'src/fg_math.c' || echo '$(srcdir)/'`src/fg_math.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_math.Tpo src/$(DEPDIR)/flowgrindd-fg_math.Po
#	$(AM_V_CC)source='src/fg_math.c' object='src/flowgrindd-fg_math.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_math.o `test -f 'src/fg_math.c' || echo '$(srcdir)/'`src/fg_math.c

src/flowgrindd-fg_math.obj: src/fg_math.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_math.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_math.Tpo -c -o src/flowgrindd-fg_math.obj `if test -f 'src/fg_math.c'; then $(CYGPATH_W) 'src/fg_math.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_math.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_math.Tpo src/$(DEPDIR)/flowgrindd-fg_math.Po
#	$(AM_V_CC)source='src/fg_math.c' object='src/flowgrindd-fg_math.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_math.obj `if test -f 'src/fg_math.c'; then $(CYGPATH_W) 'src/fg_math.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_math.c'; fi`

src/flowgrindd-fg_progname.o: src/fg_progname.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_progname.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_progname.Tpo -c -o src/flowgrindd-fg_progname.o `test -f 'src/fg_progname.c' || echo '$(srcdir)/'`src/fg_progname.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_progname.Tpo src/$(DEPDIR)/flowgrindd-fg_progname.Po
#	$(AM_V_CC)source='src/fg_progname.c' object='src/flowgrindd-fg_progname.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_progname.o `test -f 'src/fg_progname.c' || echo '$(srcdir)/'`src/fg_progname.c

src/flowgrindd-fg_progname.obj: src/fg_progname.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_progname.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_progname.Tpo -c -o src/flowgrindd-fg_progname.obj `if test -f 'src/fg_progname.c'; then $(CYGPATH_W) 'src/fg_progname.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_progname.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_progname.Tpo src/$(DEPDIR)/flowgrindd-fg_progname.Po
#	$(AM_V_CC)source='src/fg_progname.c' object='src/flowgrindd-fg_progname.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_progname.obj `if test -f 'src/fg_progname.c'; then $(CYGPATH_W) 'src/fg_progname.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_progname.c'; fi`

src/flowgrindd-fg_socket.o: src/fg_socket.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_socket.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_socket.Tpo -c -o src/flowgrindd-fg_socket.o `test -f 'src/fg_socket.c' || echo '$(srcdir)/'`src/fg_socket.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_socket.Tpo src/$(DEPDIR)/flowgrindd-fg_socket.Po
#	$(AM_V_CC)source='src/fg_socket.c' object='src/flowgrindd-fg_socket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_socket.o `test -f 'src/fg_socket.c' || echo '$(srcdir)/'`src/fg_socket.c

src/flowgrindd-fg_socket.obj: src/fg_socket.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_socket.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_socket.Tpo -c -o src/flowgrindd-fg_socket.obj `if test -f 'src/fg_socket.c'; then $(CYGPATH_W) 'src/fg_socket.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_socket.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_socket.Tpo src/$(DEPDIR)/flowgrindd-fg_socket.Po
#	$(AM_V_CC)source='src/fg_socket.c' object='src/flowgrindd-fg_socket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_socket.obj `if test -f 'src/fg_socket.c'; then $(CYGPATH_W) 'src/fg_socket.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_socket.c'; fi`

src/flowgrindd-fg_string.o: src/fg_string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_string.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_string.Tpo -c -o src/flowgrindd-fg_string.o `test -f 'src/fg_string.c' || echo '$(srcdir)/'`src/fg_string.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_string.Tpo src/$(DEPDIR)/flowgrindd-fg_string.Po
#	$(AM_V_CC)source='src/fg_string.c' object='src/flowgrindd-fg_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_string.o `test -f 'src/fg_string.c' || echo '$(srcdir)/'`src/fg_string.c

src/flowgrindd-fg_string.obj: src/fg_string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_string.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_string.Tpo -c -o src/flowgrindd-fg_string.obj `if test -f 'src/fg_string.c'; then $(CYGPATH_W) 'src/fg_string.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_string.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_string.Tpo src/$(DEPDIR)/flowgrindd-fg_string.Po
#	$(AM_V_CC)source='src/fg_string.c' object='src/flowgrindd-fg_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_string.obj `if test -f 'src/fg_string.c'; then $(CYGPATH_W) 'src/fg_string.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_string.c'; fi`

src/flowgrindd-fg_time.o: src/fg_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_time.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_time.Tpo -c -o src/flowgrindd-fg_time.o `test -f 'src/fg_time.c' || echo '$(srcdir)/'`src/fg_time.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_time.Tpo src/$(DEPDIR)/flowgrindd-fg_time.Po
#	$(AM_V_CC)source='src/fg_time.c' object='src/flowgrindd-fg_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_time.o `test -f 'src/fg_time.c' || echo '$(srcdir)/'`src/fg_time.c

src/flowgrindd-fg_time.obj: src/fg_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_time.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_time.Tpo -c -o src/flowgrindd-fg_time.obj `if test -f 'src/fg_time.c'; then $(CYGPATH_W) 'src/fg_time.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_time.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_time.Tpo src/$(DEPDIR)/flowgrindd-fg_time.Po
#	$(AM_V_CC)source='src/fg_time.c' object='src/flowgrindd-fg_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_time.obj `if test -f 'src/fg_time.c'; then $(CYGPATH_W) 'src/fg_time.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_time.c'; fi`

src/flowgrindd-flowgrindd.o: src/flowgrindd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-flowgrindd.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-flowgrindd.Tpo -c -o src/flowgrindd-flowgrindd.o `test -f 'src/flowgrindd.c' || echo '$(srcdir)/'`src/flowgrindd.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-flowgrindd.Tpo src/$(DEPDIR)/flowgrindd-flowgrindd.Po
#	$(AM_V_CC)source='src/flowgrindd.c' object='src/flowgrindd-flowgrindd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-flowgrindd.o `test -f 'src/flowgrindd.c' || echo '$(srcdir)/'`src/flowgrindd.c

src/flowgrindd-flowgrindd.obj: src/flowgrindd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-flowgrindd.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-flowgrindd.Tpo -c -o src/flowgrindd-flowgrindd.obj `if test -f 'src/flowgrindd.c'; then $(CYGPATH_W) 'src/flowgrindd.c'; else $(CYGPATH_W) '$(srcdir)/src/flowgrindd.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-flowgrindd.Tpo src/$(DEPDIR)/flowgrindd-flowgrindd.Po
#	$(AM_V_CC)source='src/flowgrindd.c' object='src/flowgrindd-flowgrindd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-flowgrindd.obj `if test -f 'src/flowgrindd.c'; then $(CYGPATH_W) 'src/flowgrindd.c'; else $(CYGPATH_W) '$(srcdir)/src/flowgrindd.c'; fi`

src/flowgrindd-log.o: src/log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-log.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-log.Tpo -c -o src/flowgrindd-log.o `test -f 'src/log.c' || echo '$(srcdir)/'`src/log.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-log.Tpo src/$(DEPDIR)/flowgrindd-log.Po
#	$(AM_V_CC)source='src/log.c' object='src/flowgrindd-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-log.o `test -f 'src/log.c' || echo '$(srcdir)/'`src/log.c

src/flowgrindd-log.obj: src/log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-log.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-log.Tpo -c -o src/flowgrindd-log.obj `if test -f 'src/log.c'; then $(CYGPATH_W) 'src/log.c'; else $(CYGPATH_W) '$(srcdir)/src/log.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-log.Tpo src/$(DEPDIR)/flowgrindd-log.Po
#	$(AM_V_CC)source='src/log.c' object='src/flowgrindd-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-log.obj `if test -f 'src/log.c'; then $(CYGPATH_W) 'src/log.c'; else $(CYGPATH_W) '$(srcdir)/src/log.c'; fi`

src/flowgrindd-source.o: src/source.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-source.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-source.Tpo -c -o src/flowgrindd-source.o `test -f 'src/source.c' || echo '$(srcdir)/'`src/source.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-source.Tpo src/$(DEPDIR)/flowgrindd-source.Po
#	$(AM_V_CC)source='src/source.c' object='src/flowgrindd-source.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-source.o `test -f 'src/source.c' || echo '$(srcdir)/'`src/source.c

src/flowgrindd-source.obj: src/source.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-source.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-source.Tpo -c -o src/flowgrindd-source.obj `if test -f 'src/source.c'; then $(CYGPATH_W) 'src/source.c'; else $(CYGPATH_W) '$(srcdir)/src/source.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-source.Tpo src/$(DEPDIR)/flowgrindd-source.Po
#	$(AM_V_CC)source='src/source.c' object='src/flowgrindd-source.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-source.obj `if test -f 'src/source.c'; then $(CYGPATH_W) 'src/source.c'; else $(CYGPATH_W) '$(srcdir)/src/source.c'; fi`

src/flowgrindd-trafgen.o: src/trafgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-trafgen.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-trafgen.Tpo -c -o src/flowgrindd-trafgen.o `test -f 'src/trafgen.c' || echo '$(srcdir)/'`src/trafgen.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-trafgen.Tpo src/$(DEPDIR)/flowgrindd-trafgen.Po
#	$(AM_V_CC)source='src/trafgen.c' object='src/flowgrindd-trafgen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-trafgen.o `test -f 'src/trafgen.c' || echo '$(srcdir)/'`src/trafgen.c

src/flowgrindd-trafgen.obj: src/trafgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-trafgen.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-trafgen.Tpo -c -o src/flowgrindd-trafgen.obj `if test -f 'src/trafgen.c'; then $(CYGPATH_W) 'src/trafgen.c'; else $(CYGPATH_W) '$(srcdir)/src/trafgen.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-trafgen.Tpo src/$(DEPDIR)/flowgrindd-trafgen.Po
#	$(AM_V_CC)source='src/trafgen.c' object='src/flowgrindd-trafgen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-trafgen.obj `if test -f 'src/trafgen.c'; then $(CYGPATH_W) 'src/trafgen.c'; else $(CYGPATH_W) '$(srcdir)/src/trafgen.c'; fi`

src/flowgrindd-fg_argparser.o: src/fg_argparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_argparser.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_argparser.Tpo -c -o src/flowgrindd-fg_argparser.o `test -f 'src/fg_argparser.c' || echo '$(srcdir)/'`src/fg_argparser.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_argparser.Tpo src/$(DEPDIR)/flowgrindd-fg_argparser.Po
#	$(AM_V_CC)source='src/fg_argparser.c' object='src/flowgrindd-fg_argparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_argparser.o `test -f 'src/fg_argparser.c' || echo '$(srcdir)/'`src/fg_argparser.c

src/flowgrindd-fg_argparser.obj: src/fg_argparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_argparser.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_argparser.Tpo -c -o src/flowgrindd-fg_argparser.obj `if test -f 'src/fg_argparser.c'; then $(CYGPATH_W) 'src/fg_argparser.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_argparser.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_argparser.Tpo src/$(DEPDIR)/flowgrindd-fg_argparser.Po
#	$(AM_V_CC)source='src/fg_argparser.c' object='src/flowgrindd-fg_argparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_argparser.obj `if test -f 'src/fg_argparser.c'; then $(CYGPATH_W) 'src/fg_argparser.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_argparser.c'; fi`

src/flowgrindd-fg_list.o: src/fg_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_list.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_list.Tpo -c -o src/flowgrindd-fg_list.o `test -f 'src/fg_list.c' || echo '$(srcdir)/'`src/fg_list.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_list.Tpo src/$(DEPDIR)/flowgrindd-fg_list.Po
#	$(AM_V_CC)source='src/fg_list.c' object='src/flowgrindd-fg_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_list.o `test -f 'src/fg_list.c' || echo '$(srcdir)/'`src/fg_list.c

src/flowgrindd-fg_list.obj: src/fg_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_list.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_list.Tpo -c -o src/flowgrindd-fg_list.obj `if test -f 'src/fg_list.c'; then $(CYGPATH_W) 'src/fg_list.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_list.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_list.Tpo src/$(DEPDIR)/flowgrindd-fg_list.Po
#	$(AM_V_CC)source='src/fg_list.c' object='src/flowgrindd-fg_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_list.obj `if test -f 'src/fg_list.c'; then $(CYGPATH_W) 'src/fg_list.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_list.c'; fi`

src/flowgrindd-fg_affinity.o: src/fg_affinity.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_affinity.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_affinity.Tpo -c -o src/flowgrindd-fg_affinity.o `test -f 'src/fg_affinity.c' || echo '$(srcdir)/'`src/fg_affinity.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_affinity.Tpo src/$(DEPDIR)/flowgrindd-fg_affinity.Po
#	$(AM_V_CC)source='src/fg_affinity.c' object='src/flowgrindd-fg_affinity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_affinity.o `test -f 'src/fg_affinity.c' || echo '$(srcdir)/'`src/fg_affinity.c

src/flowgrindd-fg_affinity.obj: src/fg_affinity.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_affinity.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_affinity.Tpo -c -o src/flowgrindd-fg_affinity.obj `if test -f 'src/fg_affinity.c'; then $(CYGPATH_W) 'src/fg_affinity.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_affinity.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_affinity.Tpo src/$(DEPDIR)/flowgrindd-fg_affinity.Po
#	$(AM_V_CC)source='src/fg_affinity.c' object='src/flowgrindd-fg_affinity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_affinity.obj `if test -f 'src/fg_affinity.c'; then $(CYGPATH_W) 'src/fg_affinity.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_affinity.c'; fi`

src/flowgrindd-fg_pcap.o: src/fg_pcap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_pcap.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_pcap.Tpo -c -o src/flowgrindd-fg_pcap.o `test -f 'src/fg_pcap.c' || echo '$(srcdir)/'`src/fg_pcap.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_pcap.Tpo src/$(DEPDIR)/flowgrindd-fg_pcap.Po
#	$(AM_V_CC)source='src/fg_pcap.c' object='src/flowgrindd-fg_pcap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_pcap.o `test -f 'src/fg_pcap.c' || echo '$(srcdir)/'`src/fg_pcap.c

src/flowgrindd-fg_pcap.obj: src/fg_pcap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_pcap.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_pcap.Tpo -c -o src/flowgrindd-fg_pcap.obj `if test -f 'src/fg_pcap.c'; then $(CYGPATH_W) 'src/fg_pcap.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_pcap.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_pcap.Tpo src/$(DEPDIR)/flowgrindd-fg_pcap.Po
#	$(AM_V_CC)source='src/fg_pcap.c' object='src/flowgrindd-fg_pcap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_pcap.obj `if test -f 'src/fg_pcap.c'; then $(CYGPATH_W) 'src/fg_pcap.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_pcap.c'; fi`

src/flowgrindd-fg_barrier.o: src/fg_barrier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_barrier.o -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_barrier.Tpo -c -o src/flowgrindd-fg_barrier.o `test -f 'src/fg_barrier.c' || echo '$(srcdir)/'`src/fg_barrier.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_barrier.Tpo src/$(DEPDIR)/flowgrindd-fg_barrier.Po
#	$(AM_V_CC)source='src/fg_barrier.c' object='src/flowgrindd-fg_barrier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_barrier.o `test -f 'src/fg_barrier.c' || echo '$(srcdir)/'`src/fg_barrier.c

src/flowgrindd-fg_barrier.obj: src/fg_barrier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -MT src/flowgrindd-fg_barrier.obj -MD -MP -MF src/$(DEPDIR)/flowgrindd-fg_barrier.Tpo -c -o src/flowgrindd-fg_barrier.obj `if test -f 'src/fg_barrier.c'; then $(CYGPATH_W) 'src/fg_barrier.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_barrier.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/flowgrindd-fg_barrier.Tpo src/$(DEPDIR)/flowgrindd-fg_barrier.Po
#	$(AM_V_CC)source='src/fg_barrier.c' object='src/flowgrindd-fg_barrier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(flowgrindd_CFLAGS) $(CFLAGS) -c -o src/flowgrindd-fg_barrier.obj `if test -f 'src/fg_barrier.c'; then $(CYGPATH_W) 'src/fg_barrier.c'; else $(CYGPATH_W) '$(srcdir)/src/fg_barrier.c'; fi`
install-man1: $(dist_man1_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(dist_man1_MANS)'; \
	list2=''; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(MANS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean-local:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man \
	uninstall-sbinPROGRAMS

uninstall-man: uninstall-man1

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-cscope clean-generic clean-local \
	clean-sbinPROGRAMS cscope cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-man \
	uninstall-man1 uninstall-sbinPROGRAMS


.PHONY: gitversion.h mrproper html.timestamp clean-local

gitversion.h:
	$(shellL) ./scripts/make-version.sh

mrproper: maintainer-clean
	-rm -rf $(MR_PROPER_FILES)

# configured w/ doxygen
#html: html.timestamp

#html.timestamp:
#	$(DOXYGEN) doc/Doxyfile
#	touch doc/$@

#clean-local:
#	-rm -rf $(CLEAN_LOCAL_FILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
